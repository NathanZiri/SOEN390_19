{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport validate from './validateInfo';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = callback => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    if (Object.keys(errors).length === 0) {\n      console.log(\"Registration information is good\");\n      console.log(values);\n\n      try {\n        axios.post(\"http://localhost:5000/users\", {\n          username: values.username,\n          password: values.password,\n          email: values.email\n        }).then(response => {\n          console.log(\"Info addeed to db\");\n          console.log(response);\n        });\n      } catch (error) {\n        console.log(\"Got an error when trying to add to database\");\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"WblA6N+IYaC5U9/qWEuOhOdURko=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/Sekay/Desktop/SOEN390/SOEN390_19/Client/src/Forms/useForm.js"],"names":["validate","useState","useEffect","axios","useForm","callback","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length","console","log","post","then","response","error"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AAAA;;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAD,CAApC;AAOA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACb,QAAQ,CAACM,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAGQ,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAAlC,EAAsC;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;;AACA,UAAG;AACCH,QAAAA,KAAK,CAACyB,IAAN,CAAW,6BAAX,EAA0C;AAEtCpB,UAAAA,QAAQ,EAAEF,MAAM,CAACE,QAFqB;AAGtCE,UAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAHqB;AAItCD,UAAAA,KAAK,EAAEH,MAAM,CAACG;AAJwB,SAA1C,EAMDoB,IANC,CAMKC,QAAD,IAAc;AAClBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,SATG;AAUP,OAXG,CAWH,OAAMC,KAAN,EAAY;AACTL,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AAEJ;AACA,GAxBD;;AA2BA7B,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGqB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAvC,EAAoD;AAChDT,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACO,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CAtDD;;GAAMR,O;;AAwDN,eAAeA,OAAf","sourcesContent":["import validate from './validateInfo'\r\nimport {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst useForm = callback => {\r\n\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const[errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validate(values))\r\n        setIsSubmitting(true)\r\n        if(Object.keys(errors).length === 0 ) {\r\n            console.log(\"Registration information is good\")\r\n            console.log(values)\r\n            try{\r\n                axios.post(\"http://localhost:5000/users\", { \r\n                    \r\n                    username: values.username,\r\n                    password: values.password,\r\n                    email: values.email\r\n                \r\n            }).then((response) => {\r\n                console.log(\"Info addeed to db\")\r\n                console.log(response)\r\n            }) \r\n        }catch(error){\r\n            console.log(\"Got an error when trying to add to database\")\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    }\r\n    \r\n\r\n    useEffect( () => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting){\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    return {handleChange, values, handleSubmit, errors}\r\n}\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}