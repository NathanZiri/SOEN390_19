{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport validate from './validateInfo';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = callback => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n\n    if (Object.keys(errors).length === 0) {\n      console.log(\"Registration information is good\");\n      console.log(values);\n\n      try {\n        axios.post(\"http://localhost:5000/users\", {\n          body: {\n            username: values.username,\n            password: values.password,\n            email: values.email\n          }\n        }).then(response => {\n          console.log(\"Info addeed to db\");\n          setIsSubmitting(true);\n          console.log(response);\n        });\n      } catch (error) {\n        console.log(\"Got an error when trying to add to database\");\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"fL5GgalSPmuDPUhJAShsdxewMLs=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/michaelcristiano/Documents/GitHub/SOEN390_19/Client/src/Forms/useForm.js"],"names":["validate","useState","useEffect","axios","useForm","callback","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length","console","log","post","body","then","response","error"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AAAA;;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAD,CAApC;AAOA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACb,QAAQ,CAACM,MAAD,CAAT,CAAT;;AAEA,QAAGiB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAAlC,EAAsC;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;;AACA,UAAG;AACCH,QAAAA,KAAK,CAACyB,IAAN,CAAW,6BAAX,EAA0C;AAC1CC,UAAAA,IAAI,EAAE;AACFrB,YAAAA,QAAQ,EAAEF,MAAM,CAACE,QADf;AAEFE,YAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAFf;AAGFD,YAAAA,KAAK,EAAEH,MAAM,CAACG;AAHZ;AADoC,SAA1C,EAMDqB,IANC,CAMKC,QAAD,IAAc;AAClBL,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAZ,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAW,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,SAVG;AAWP,OAZG,CAYH,OAAMC,KAAN,EAAY;AACTN,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ;AACA,GAxBD;;AA2BA9B,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGqB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAvC,EAAoD;AAChDT,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACO,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CAtDD;;GAAMR,O;;AAwDN,eAAeA,OAAf","sourcesContent":["import validate from './validateInfo'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\nconst useForm = callback => {\n\n    const [values, setValues] = useState({\n        username: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n    const[errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setErrors(validate(values))\n\n        if(Object.keys(errors).length === 0 ) {\n            console.log(\"Registration information is good\")\n            console.log(values)\n            try{\n                axios.post(\"http://localhost:5000/users\", {\n                body: {\n                    username: values.username,\n                    password: values.password,\n                    email: values.email\n                }\n            }).then((response) => {\n                console.log(\"Info addeed to db\")\n                setIsSubmitting(true)\n                console.log(response)\n            }) \n        }catch(error){\n            console.log(\"Got an error when trying to add to database\")\n            console.log(error)\n        }\n    }\n    }\n    \n\n    useEffect( () => {\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback()\n        }\n    }, [errors])\n\n    return {handleChange, values, handleSubmit, errors}\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}