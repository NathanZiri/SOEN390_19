{"ast":null,"code":"export default function validateLogin(values) {\n  let accounts = new Map();\n  let testAccount = {\n    email: \"asd@asd.com\",\n    password: \"asdasdasd\"\n  };\n  accounts.set(\"asd@asd.com\", testAccount);\n  let errors = {};\n  let emailTest = values.email;\n  let passwordTest = values.password;\n  console.log(accounts.get(testAccount.email).password);\n  console.log(\"You clicked the login button\");\n\n  if (!values.email) {\n    errors.email = \"Email required\";\n  } else if (!accounts.has(emailTest)) {\n    console.log(\"Error in Email\");\n    errors.email = \"Email does not exist\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.email && accounts.has(emailTest) && passwordTest !== accounts.get(emailTest).password) {\n    console.log(\"Error in password\");\n    errors.password = \"Password does not match\";\n  } else {\n    console.log(\"No Errors\");\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["/Users/michaelcristiano/Documents/GitHub/SOEN390_19/Client/src/Forms/validateLogin.js"],"names":["validateLogin","values","accounts","Map","testAccount","email","password","set","errors","emailTest","passwordTest","console","log","get","has"],"mappings":"AACA,eAAe,SAASA,aAAT,CAAuBC,MAAvB,EAA8B;AACzC,MAAIC,QAAQ,GAAG,IAAIC,GAAJ,EAAf;AACA,MAAIC,WAAW,GAAG;AACdC,IAAAA,KAAK,EAAE,aADO;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAAlB;AAIAJ,EAAAA,QAAQ,CAACK,GAAT,CAAa,aAAb,EAA4BH,WAA5B;AAEA,MAAII,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAGR,MAAM,CAACI,KAAvB;AACA,MAAIK,YAAY,GAAGT,MAAM,CAACK,QAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,GAAT,CAAaT,WAAW,CAACC,KAAzB,EAAgCC,QAA5C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAEA,MAAG,CAACX,MAAM,CAACI,KAAX,EAAiB;AACbG,IAAAA,MAAM,CAACH,KAAP,GAAe,gBAAf;AACH,GAFD,MAEO,IAAG,CAACH,QAAQ,CAACY,GAAT,CAAaL,SAAb,CAAJ,EAA4B;AAC/BE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAJ,IAAAA,MAAM,CAACH,KAAP,GAAe,sBAAf;AACH;;AAGD,MAAG,CAACJ,MAAM,CAACK,QAAX,EAAoB;AAChBE,IAAAA,MAAM,CAACF,QAAP,GAAkB,mBAAlB;AACH,GAFD,MAGK,IAAGL,MAAM,CAACI,KAAP,IAAgBH,QAAQ,CAACY,GAAT,CAAaL,SAAb,CAAhB,IAA2CC,YAAY,KAAKR,QAAQ,CAACW,GAAT,CAAaJ,SAAb,EAAwBH,QAAvF,EAAgG;AACjGK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAJ,IAAAA,MAAM,CAACF,QAAP,GAAkB,yBAAlB;AACH,GAHI,MAID;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAED,SAAOJ,MAAP;AAGH","sourcesContent":["\nexport default function validateLogin(values){\n    let accounts = new Map()\n    let testAccount = {\n        email: \"asd@asd.com\",\n        password: \"asdasdasd\"\n    }\n    accounts.set(\"asd@asd.com\", testAccount)\n\n    let errors = {}\n    let emailTest = values.email\n    let passwordTest = values.password\n    console.log(accounts.get(testAccount.email).password)\n    console.log(\"You clicked the login button\")\n\n    if(!values.email){\n        errors.email = \"Email required\"\n    } else if(!accounts.has(emailTest)){\n        console.log(\"Error in Email\")\n        errors.email = \"Email does not exist\"\n    }\n\n\n    if(!values.password){\n        errors.password = \"Password required\"\n    }\n    else if(values.email && accounts.has(emailTest) && passwordTest !== accounts.get(emailTest).password){\n        console.log(\"Error in password\")\n        errors.password = \"Password does not match\"\n    }\n    else{\n        console.log(\"No Errors\")\n    }\n\n    return errors;\n\n\n}"]},"metadata":{},"sourceType":"module"}