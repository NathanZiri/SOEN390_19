{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport validate from './validateInfo';\nimport { useState, useEffect } from 'react';\n\nconst useForm = callback => {\n  _s();\n\n  let usersMap = new Map();\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    if (values.username && values.email && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email) && values.password && values.password.length >= 8 && values.password2 && values.password2 === values.password) {\n      console.log(\"Information is good adding to database\");\n      usersMap.set(values.email, values);\n      console.log(usersMap);\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors,\n    usersMap\n  };\n};\n\n_s(useForm, \"fL5GgalSPmuDPUhJAShsdxewMLs=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/michaelcristiano/Desktop/my-app/src/Forms/useForm.js"],"names":["validate","useState","useEffect","useForm","callback","usersMap","Map","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","test","length","console","log","set","Object","keys"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AAAA;;AAExB,MAAIC,QAAQ,GAAG,IAAIC,GAAJ,EAAf;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAD,CAApC;AAOA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACd,QAAQ,CAACO,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;;AAEA,QAAGT,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACG,KAA1B,IAAmC,2CAA2Cc,IAA3C,CAAgDjB,MAAM,CAACG,KAAvD,CAAnC,IACJH,MAAM,CAACI,QADH,IACeJ,MAAM,CAACI,QAAP,CAAgBc,MAAhB,IAA0B,CADzC,IAC8ClB,MAAM,CAACK,SADrD,IACkEL,MAAM,CAACK,SAAP,KAAqBL,MAAM,CAACI,QADjG,EAC4G;AAC5Ge,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAtB,MAAAA,QAAQ,CAACuB,GAAT,CAAarB,MAAM,CAACG,KAApB,EAA2BH,MAA3B;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACH;AACA,GAXD;;AAcAH,EAAAA,SAAS,CAAE,MAAM;AACb,QAAG2B,MAAM,CAACC,IAAP,CAAYjB,MAAZ,EAAoBY,MAApB,KAA+B,CAA/B,IAAoCV,YAAvC,EAAoD;AAChDX,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACS,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA,MAArC;AAA6CR,IAAAA;AAA7C,GAAP;AACH,CA3CD;;GAAMF,O;;AA6CN,eAAeA,OAAf","sourcesContent":["import validate from './validateInfo'\nimport {useState, useEffect} from 'react'\n\n\nconst useForm = callback => {\n\n    let usersMap = new Map();\n\n    const [values, setValues] = useState({\n        username: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n    const[errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setErrors(validate(values))\n        setIsSubmitting(true)\n\n        if(values.username && values.email && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    && values.password && values.password.length >= 8 && values.password2 && values.password2 === values.password ) {\n        console.log(\"Information is good adding to database\")\n        usersMap.set(values.email, values)\n        console.log(usersMap)\n    }\n    }\n    \n\n    useEffect( () => {\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback()\n        }\n    }, [errors])\n\n    return {handleChange, values, handleSubmit, errors, usersMap}\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}