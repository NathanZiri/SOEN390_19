{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport validate from './validateInfo';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = callback => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors(validate(values));\n\n    if (values.username && values.email && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email) && values.password && values.password.length >= 8 && values.password2 && values.password2 === values.password) {\n      try {\n        await axios.post(\"http://localhost:5000/users\", {\n          body: {\n            username: values.username,\n            password: values.password,\n            email: values.email\n          }\n        });\n        console.log(\"Info addeed to db\");\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"fL5GgalSPmuDPUhJAShsdxewMLs=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/michaelcristiano/Documents/GitHub/SOEN390_19/Client/src/Forms/useForm.js"],"names":["validate","useState","useEffect","axios","useForm","callback","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","test","length","post","body","console","log","Object","keys"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AAAA;;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,SAAS,EAAE;AAJsB,GAAD,CAApC;AAOA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACY,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,MAAMJ,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACb,QAAQ,CAACM,MAAD,CAAT,CAAT;;AAEA,QAAGA,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACG,KAA1B,IAAmC,2CAA2Cc,IAA3C,CAAgDjB,MAAM,CAACG,KAAvD,CAAnC,IACJH,MAAM,CAACI,QADH,IACeJ,MAAM,CAACI,QAAP,CAAgBc,MAAhB,IAA0B,CADzC,IAC8ClB,MAAM,CAACK,SADrD,IACkEL,MAAM,CAACK,SAAP,KAAqBL,MAAM,CAACI,QADjG,EAC4G;AAC5G,UAAG;AACC,cAAMP,KAAK,CAACsB,IAAN,CAAW,6BAAX,EAA0C;AAC5CC,UAAAA,IAAI,EAAE;AACFlB,YAAAA,QAAQ,EAAEF,MAAM,CAACE,QADf;AAEFE,YAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAFf;AAGFD,YAAAA,KAAK,EAAEH,MAAM,CAACG;AAHZ;AADsC,SAA1C,CAAN;AAOAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OATD,CASC,OAAMX,CAAN,EAAQ;AACLU,QAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACH;AACJ;;AACDF,IAAAA,eAAe,CAAC,IAAD,CAAf;AACC,GApBD;;AAuBAb,EAAAA,SAAS,CAAE,MAAM;AACb,QAAG2B,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBY,MAApB,KAA+B,CAA/B,IAAoCV,YAAvC,EAAoD;AAChDT,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACO,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CAlDD;;GAAMR,O;;AAoDN,eAAeA,OAAf","sourcesContent":["import validate from './validateInfo'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\nconst useForm = callback => {\n\n    const [values, setValues] = useState({\n        username: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n    const[errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setErrors(validate(values))\n\n        if(values.username && values.email && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    && values.password && values.password.length >= 8 && values.password2 && values.password2 === values.password ) {\n        try{\n            await axios.post(\"http://localhost:5000/users\", {\n                body: {\n                    username: values.username,\n                    password: values.password,\n                    email: values.email\n                }\n            }) \n            console.log(\"Info addeed to db\")\n        }catch(e){\n            console.log(e)\n        }\n    }\n    setIsSubmitting(true)\n    }\n    \n\n    useEffect( () => {\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback()\n        }\n    }, [errors])\n\n    return {handleChange, values, handleSubmit, errors}\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}