{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport validateLogin from './validateLogin';\nimport { AuthContext } from '../Contexts/AuthorizationContext';\nimport axios from 'axios';\n\nconst useLogin = callback => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    loggedIn,\n    setLoggedIn\n  } = React.useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const [isLogginIn, setIsLoggingIn] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //API Call\n\n    try {\n      console.log(\"going in\");\n      axios.get(`http://localhost:5000/users/${values.email}`, {\n        email: values.email\n      }).then(response => {\n        console.log(response.value); // setErrors(validateLogin(values))\n        // setLoggedIn(true)\n        // setIsLoggingIn(true)\n      });\n    } catch (error) {\n      console.log(\"Error trying to log in\");\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isLogginIn) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useLogin, \"CtmvXfAQirtDX1oXHHMKCWbKg+U=\");\n\nexport default useLogin;","map":{"version":3,"sources":["/Users/michaelcristiano/Documents/GitHub/SOEN390_19/Client/src/Forms/useLogin.js"],"names":["React","useState","useEffect","validateLogin","AuthContext","axios","useLogin","callback","values","setValues","email","password","loggedIn","setLoggedIn","useContext","errors","setErrors","isLogginIn","setIsLoggingIn","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","get","then","response","error","Object","keys","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACjCS,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAC;AAFwB,GAAD,CAApC;AAIA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4Bb,KAAK,CAACc,UAAN,CAAiBV,WAAjB,CAAlC;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,UAAD,EAAaC,cAAb,IAA+BjB,QAAQ,CAAC,KAAD,CAA7C;;AAEA,QAAMkB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAK;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAvB;AACAd,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACa,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACK,cAAF,GADqB,CAErB;;AACI,QAAG;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAtB,MAAAA,KAAK,CAACuB,GAAN,CAAW,+BAA8BpB,MAAM,CAACE,KAAM,EAAtD,EAAwD;AACpDA,QAAAA,KAAK,EAAEF,MAAM,CAACE;AADsC,OAAxD,EAGCmB,IAHD,CAGOC,QAAD,IAAc;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACR,KAArB,EADgB,CAEhB;AACA;AACA;AACH,OARD;AAUH,KAZD,CAYC,OAAMS,KAAN,EAAY;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACR,GAnBD;;AAqBA7B,EAAAA,SAAS,CAAE,MAAM;AACb,QAAG8B,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBmB,MAApB,KAA+B,CAA/B,IAAoCjB,UAAvC,EAAkD;AAC9CV,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACQ,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeX,IAAAA,MAAf;AAAuBgB,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AAEH,CA/CD;;GAAMT,Q;;AAiDN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport validateLogin from './validateLogin'\nimport {AuthContext} from '../Contexts/AuthorizationContext'\nimport axios from 'axios'\n\nconst useLogin = callback => {\n    const [values, setValues] = useState({\n        email: '',\n        password:''\n    })\n    const { loggedIn, setLoggedIn } = React.useContext(AuthContext);\n\n    const [errors, setErrors] = useState({});\n    const [isLogginIn, setIsLoggingIn] = useState(false);\n\n    const handleChange = e => {\n        const{name, value} = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        //API Call\n            try{\n                console.log(\"going in\")\n                axios.get(`http://localhost:5000/users/${values.email}`,{\n                    email: values.email\n                })\n                .then((response) => {\n                    console.log(response.value)\n                    // setErrors(validateLogin(values))\n                    // setLoggedIn(true)\n                    // setIsLoggingIn(true)\n                })\n    \n            }catch(error){\n                console.log(\"Error trying to log in\")\n                console.log(error)\n            }\n    }\n\n    useEffect( () => {\n        if(Object.keys(errors).length === 0 && isLogginIn){\n            callback()\n        }\n    }, [errors])\n\n    return {handleChange, values, handleSubmit, errors}\n\n}\n\nexport default useLogin"]},"metadata":{},"sourceType":"module"}