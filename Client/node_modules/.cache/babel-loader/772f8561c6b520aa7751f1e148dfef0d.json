{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport validateLogin from './validateLogin';\nimport { AuthContext } from '../Contexts/AuthorizationContext';\nimport axios from 'axios';\n\nconst useLogin = callback => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    loggedIn,\n    setLoggedIn\n  } = React.useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const [isLogginIn, setIsLoggingIn] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validateLogin(values)); //API Call\n\n    if (Object.keys(errors).length === 0) {\n      try {\n        console.log(\"going in\");\n        axios.get(`http://localhost:5000/users/login/${values.email}/${values.password}`, {\n          email: values.email,\n          pass: values.password\n        }).then(response => {\n          console.log(response);\n          setLoggedIn(true);\n          setIsLoggingIn(true);\n        });\n      } catch (error) {\n        console.log(\"Error trying to log in\");\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isLogginIn) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useLogin, \"RUVdI+PCIHYSK8eOdIZQO+lZlpw=\");\n\nexport default useLogin;","map":{"version":3,"sources":["C:/Users/Sekay/Desktop/SOEN390/SOEN390_19/Client/src/Forms/useLogin.js"],"names":["React","useState","useEffect","validateLogin","AuthContext","axios","useLogin","callback","values","setValues","email","password","loggedIn","setLoggedIn","useContext","errors","setErrors","isLogginIn","setIsLoggingIn","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length","console","log","get","pass","then","response","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACjCS,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAC;AAFwB,GAAD,CAApC;AAIA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4Bb,KAAK,CAACc,UAAN,CAAiBV,WAAjB,CAAlC;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,UAAD,EAAaC,cAAb,IAA+BjB,QAAQ,CAAC,KAAD,CAA7C;;AAEA,QAAMkB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAK;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAvB;AACAd,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACa,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACb,aAAa,CAACK,MAAD,CAAd,CAAT,CAFqB,CAGrB;;AAEA,QAAGkB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAAlC,EAAoC;AAChC,UAAG;AACCC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAzB,QAAAA,KAAK,CAAC0B,GAAN,CAAW,qCAAoCvB,MAAM,CAACE,KAAM,IAAGF,MAAM,CAACG,QAAS,EAA/E,EAAiF;AAC7ED,UAAAA,KAAK,EAAEF,MAAM,CAACE,KAD+D;AAE7EsB,UAAAA,IAAI,EAAExB,MAAM,CAACG;AAFgE,SAAjF,EAICsB,IAJD,CAIOC,QAAD,IAAc;AAChBL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACArB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SARD;AAUH,OAZD,CAYC,OAAMiB,KAAN,EAAY;AACTN,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ;AACJ,GAvBD;;AAyBAjC,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGwB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,UAAvC,EAAkD;AAC9CV,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACQ,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeX,IAAAA,MAAf;AAAuBgB,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AAEH,CAnDD;;GAAMT,Q;;AAqDN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport validateLogin from './validateLogin'\r\nimport {AuthContext} from '../Contexts/AuthorizationContext'\r\nimport axios from 'axios'\r\n\r\nconst useLogin = callback => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password:''\r\n    })\r\n    const { loggedIn, setLoggedIn } = React.useContext(AuthContext);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isLogginIn, setIsLoggingIn] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const{name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        setErrors(validateLogin(values))\r\n        //API Call\r\n\r\n        if(Object.keys(errors).length === 0){\r\n            try{\r\n                console.log(\"going in\")\r\n                axios.get(`http://localhost:5000/users/login/${values.email}/${values.password}`,{\r\n                    email: values.email,\r\n                    pass: values.password\r\n                })\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    setLoggedIn(true)\r\n                    setIsLoggingIn(true)\r\n                })\r\n    \r\n            }catch(error){\r\n                console.log(\"Error trying to log in\")\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(Object.keys(errors).length === 0 && isLogginIn){\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    return {handleChange, values, handleSubmit, errors}\r\n\r\n}\r\n\r\nexport default useLogin"]},"metadata":{},"sourceType":"module"}